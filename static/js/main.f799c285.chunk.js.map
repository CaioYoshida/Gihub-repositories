{"version":3,"sources":["assets/logo.svg","styles/globalStyle.ts","routes/Route.tsx","components/Input/styles.ts","components/Input/index.tsx","components/Button/styles.ts","components/Button/index.tsx","pages/SignIn/styles.ts","pages/SignIn/index.tsx","store/modules/auth/actions.js","services/api.ts","components/Header/styles.ts","components/Header/index.tsx","pages/Dashboard/styles.ts","pages/Dashboard/index.tsx","components/RepositoryModal/styles.ts","components/RepositoryModal/index.tsx","pages/Repositories/styles.ts","pages/Repositories/index.tsx","routes/index.tsx","store/modules/auth/reducer.js","store/index.js","App.tsx","index.tsx"],"names":["module","exports","GlobalStyle","createGlobalStyle","Route","isPrivate","Component","component","rest","data","useSelector","state","render","location","login","to","pathname","from","Container","styled","div","props","isErrored","css","isFocused","isFilled","Input","Icon","icon","defaultValue","inputRef","useRef","useState","setIsFocused","setIsFilled","handleInputFocus","useCallback","handleInputBlur","current","value","size","onFocus","onBlur","ref","button","Button","children","type","LoginContainer","ErrorMessage","ButtonComponent","SignIn","history","useHistory","dispatch","useDispatch","setLogin","password","setPassword","loginError","setLoginError","handleEnterButton","payload","signIn","push","src","logoImg","alt","FiUser","onChange","item","target","placeholder","FiMail","onClick","api","axios","create","baseURL","SideMenu","Header","SearchUserContainer","UserInformationContainer","PersonalInformationContainer","GithubInformationContainer","Dashboard","userInput","setUserInput","userData","setUserData","inputError","setInputError","handleSearchButton","searchUser","useEffect","a","get","response","loadUserData","avatar_url","name","bio","public_repos","followers","following","Modal","RepositoryModal","handleClickOutsideModal","repository","description","stargazers_count","forks_count","open_issues_count","href","full_name","RepositoriesListContainer","RepositoriesView","PaginationContainer","Repositories","match","useRouteMatch","page","setPage","numberOfPages","setNumberOfPages","showRepositoryModal","setShowRepositoryModal","user","setUser","setRepository","repositoriesList","setRepositoriesList","params","repositoriesData","Math","ceil","loadRepositoriesData","handleNextPage","handlePreviousPage","handleClickRepository","map","key","id","Routes","exact","path","INITIAL_STATE","persistConfig","storage","blacklist","store","createStore","persistReducer","action","produce","draft","persistor","persistStore","App","basename","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f799c285.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.d5cc199a.svg\";","import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    outline: 0;\n    box-sizing: border-box;\n  }\n\n  *:focus{\n    outline: 0;\n  }\n\n  html, body, #root {\n    height: 100%;\n  }\n\n  body {\n    -webkit-font-smoothing: antialiased;\n  }\n\n  body, input, button, textarea {\n    font: 14px 'Roboto', sans-serif;\n  }\n\n  a {\n    list-style: none;\n  }\n\n  button {\n    cursor: pointer;\n  }\n`;\n\nexport default GlobalStyle;\n","import React from 'react';\nimport {\n  Route as ReactDOMRoute,\n  RouteProps as ReactDOMRouteProps,\n  Redirect,\n} from 'react-router-dom';\nimport { useSelector, DefaultRootState } from 'react-redux';\n\ninterface RouteProps extends ReactDOMRouteProps {\n  isPrivate?: boolean;\n  component: React.ComponentType;\n}\n\ninterface ReduxStateProps extends DefaultRootState {\n  login?: string;\n  password?: string;\n  searchUser?: string;\n}\n\nconst Route: React.FC<RouteProps> = ({\n  isPrivate = false,\n  component: Component,\n  ...rest\n}) => {\n  const data: ReduxStateProps = useSelector(state => state);\n\n  return (\n    <ReactDOMRoute\n      {...rest}\n      render={({ location }) => {\n        return isPrivate === !!data.login ? (\n          <Component />\n        ) : (\n          <Redirect\n            to={{\n              pathname: isPrivate ? '/' : '/dashboard',\n              state: { from: location },\n            }}\n          />\n        );\n      }}\n    />\n  );\n};\n\nexport default Route;\n","import styled, { css } from 'styled-components';\n\ninterface ContainerProps {\n  isErrored: boolean;\n  isFocused: boolean;\n  isFilled: boolean;\n}\n\nexport const Container = styled.div<ContainerProps>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  height: 50px;\n  width: 100%;\n  padding: 0 10px;\n  background-color: #fbfbfb;\n  border-radius: 6px;\n  border: 2px solid #bbb;\n  color: #bbb;\n\n  & + div {\n    margin-top: 20px;\n  }\n\n  ${props =>\n    props.isErrored &&\n    css`\n      border-color: #c53030;\n    `}\n\n  ${props =>\n    props.isFocused &&\n    css`\n      color: #2764bf;\n      border-color: #2764bf;\n    `}\n\n  ${props =>\n    props.isFilled &&\n    css`\n      color: #2764bf;\n    `}\n\n  svg {\n    margin-right: 8px;\n  }\n\n  input {\n    height: 25px;\n    font-size: 18px;\n    padding: 0px;\n    flex: 1;\n    border: 0;\n    background: transparent;\n    color: #444;\n    font-weight: bold;\n\n    &:focus {\n      outline: none;\n    }\n\n    &::placeholder {\n      color: #bbb;\n      font-weight: 400;\n      font-style: italic;\n    }\n  }\n`;\n","import React, {\n  InputHTMLAttributes,\n  useRef,\n  useState,\n  useCallback,\n} from 'react';\nimport { IconBaseProps } from 'react-icons';\n\nimport { Container } from './styles';\n\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n  icon?: React.ComponentType<IconBaseProps>;\n  isErrored: boolean;\n  defaultValue?: string;\n}\n\nconst Input: React.FC<InputProps> = ({\n  icon: Icon,\n  isErrored = false,\n  defaultValue = '',\n  ...rest\n}) => {\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const [isFocused, setIsFocused] = useState(false);\n  const [isFilled, setIsFilled] = useState(false);\n\n  const handleInputFocus = useCallback(() => {\n    setIsFocused(true);\n  }, []);\n\n  const handleInputBlur = useCallback(() => {\n    setIsFocused(false);\n\n    if (inputRef.current && inputRef.current.value) {\n      setIsFilled(true);\n    } else {\n      setIsFilled(false);\n    }\n  }, []);\n\n  return (\n    <Container isErrored={isErrored} isFilled={isFilled} isFocused={isFocused}>\n      {Icon && <Icon size={20} />}\n      <input\n        onFocus={handleInputFocus}\n        onBlur={handleInputBlur}\n        defaultValue={defaultValue}\n        ref={inputRef}\n        {...rest}\n      />\n    </Container>\n  );\n};\n\nexport default Input;\n","import styled from 'styled-components';\n\nexport const Container = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  height: 50px;\n  width: 100%;\n  background-color: #2ad36e;\n  border-radius: 6px;\n  border: none;\n  color: #fff;\n  font-weight: bold;\n  font-size: 18px;\n  transition: background-color 0.2s;\n  outline: none;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #2cc66a;\n  }\n`;\n","import React, { ButtonHTMLAttributes } from 'react';\n\nimport { Container } from './styles';\n\ntype ButtonProps = ButtonHTMLAttributes<HTMLButtonElement>;\n\nconst Button: React.FC<ButtonProps> = ({ children, ...rest }) => {\n  return (\n    <>\n      <Container type=\"button\" {...rest}>\n        {children}\n      </Container>\n    </>\n  );\n};\n\nexport default Button;\n","import styled from 'styled-components';\n\nimport ButtonComponent from '../../components/Button';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n\n  height: 100vh;\n`;\n\nexport const LoginContainer = styled.div`\n  display: flex;\n  flex: 1;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n\n  width: 100%;\n  max-width: 400px;\n\n  > img {\n    margin-bottom: 25px;\n    width: 100%;\n    max-width: 400px;\n  }\n\n  @media (max-width: 430px) {\n    padding: 0 20px;\n  }\n`;\n\nexport const ErrorMessage = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  font-weight: bold;\n\n  color: #c53030;\n\n  margin-bottom: 5px;\n\n  svg {\n    margin-right: 5px;\n  }\n`;\n\nexport const Button = styled(ButtonComponent)`\n  margin-top: 25px;\n`;\n","import React, { useState, useCallback } from 'react';\nimport { FiUser, FiMail, FiAlertCircle } from 'react-icons/fi';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nimport { signIn } from '../../store/modules/auth/actions';\n\nimport Input from '../../components/Input';\n\nimport logoImg from '../../assets/logo.svg';\n\nimport { Container, LoginContainer, ErrorMessage, Button } from './styles';\n\nconst SignIn: React.FC = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const [login, setLogin] = useState('');\n  const [password, setPassword] = useState('');\n\n  const [loginError, setLoginError] = useState(false);\n\n  const handleEnterButton = useCallback(() => {\n    if (login === 'admin' && password === 'password') {\n      dispatch(signIn(login, password));\n\n      setLoginError(false);\n\n      history.push('/dashboard');\n    } else {\n      setLoginError(true);\n    }\n  }, [login, password, history, dispatch]);\n\n  return (\n    <Container>\n      <LoginContainer>\n        <img src={logoImg} alt=\"github-repositories\" />\n\n        {loginError && (\n          <ErrorMessage>\n            <FiAlertCircle size={20} />\n            <span>Usuário e/ou senha inválidos. Tente novamente!</span>\n          </ErrorMessage>\n        )}\n        <Input\n          icon={FiUser}\n          isErrored={loginError}\n          defaultValue={login}\n          onChange={item => setLogin(item.target.value)}\n          placeholder=\"Nome usuário\"\n        />\n        <Input\n          icon={FiMail}\n          isErrored={loginError}\n          defaultValue={password}\n          onChange={item => setPassword(item.target.value)}\n          placeholder=\"Senha\"\n          type=\"password\"\n        />\n\n        <Button type=\"button\" onClick={handleEnterButton}>\n          Entrar\n        </Button>\n      </LoginContainer>\n    </Container>\n  );\n};\n\nexport default SignIn;\n","export function signIn(login, password) {\n  return {\n    type: '@auth/SIGN_IN',\n    payload: { login, password },\n  };\n};\n\nexport function signOut() {\n  return {\n    type: '@auth/SIGN_OUT',\n  };\n};\n\nexport function searchUser(searchUser) {\n  return {\n    type: '@auth/SEARCH_USER',\n    payload: searchUser,\n  };\n};\n","import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'https://api.github.com/users',\n});\n\nexport default api;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  height: 70px;\n  width: 100%;\n  padding: 0 10px;\n  background-color: #fff;\n  position: fixed;\n  top: 0;\n\n  box-shadow: 4px 2px 4px rgba(0, 0, 0, 0.25);\n\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  > img {\n    height: 50px;\n    margin-right: 10px;\n  }\n`;\n\nexport const SideMenu = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n\n  width: 100%;\n  max-width: 250px;\n\n  button {\n    border: none;\n    background-color: transparent;\n    color: #c53030;\n\n    display: flex;\n    align-items: center;\n\n    span {\n      margin-left: 5px;\n      font-weight: 700;\n      font-size: 16px;\n    }\n  }\n\n  > div {\n    display: flex;\n    align-items: center;\n\n    span {\n      margin-right: 10px;\n      font-weight: 500;\n      font-size: 16px;\n    }\n\n    > img {\n      height: 44px;\n      border-radius: 22px;\n      border: 2px solid #c4c4c4;\n    }\n  }\n\n  @media (max-width: 500px) {\n    justify-content: flex-end;\n    > div {\n      display: none;\n    }\n  }\n`;\n","import React from 'react';\nimport { useSelector, DefaultRootState, useDispatch } from 'react-redux';\nimport { FiLogOut } from 'react-icons/fi';\n\nimport { signOut } from '../../store/modules/auth/actions';\n\nimport { Container, SideMenu } from './styles';\n\ninterface ReduxStateProps extends DefaultRootState {\n  login?: string;\n  password?: string;\n  searchUser?: string;\n}\n\nconst Header: React.FC = () => {\n  const dispatch = useDispatch();\n  const data: ReduxStateProps = useSelector(state => state);\n\n  return (\n    <Container>\n      <img src=\"https://i.imgur.com/acbFfn9.png\" alt=\"github-repositories\" />\n\n      <SideMenu>\n        <button type=\"button\" onClick={() => dispatch(signOut())}>\n          <FiLogOut size={20} />\n          <span>Sair</span>\n        </button>\n\n        <div>\n          <span>{`Olá, ${data.login}`}</span>\n          <img\n            src=\"https://avatars.githubusercontent.com/u/810438?v=4\"\n            alt=\"Fulano\"\n          />\n        </div>\n      </SideMenu>\n    </Container>\n  );\n};\n\nexport default Header;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  height: 100vh;\n  justify-content: flex-start;\n  align-items: center;\n  background-color: #e5e5e5;\n\n  @media (max-width: 900px) {\n    padding: 0 20px;\n  }\n`;\n\nexport const SearchUserContainer = styled.div`\n  margin-top: 90px;\n  margin-left: 10px;\n  margin-right: 10px;\n\n  width: 100%;\n  max-width: 900px;\n\n  background-color: #fff;\n  padding: 20px;\n  border-radius: 8px;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n\n  > span {\n    font-weight: 500;\n  }\n\n  > div {\n    display: flex;\n    flex-direction: row;\n\n    margin-top: 10px;\n\n    button {\n      width: 100%;\n      max-width: 80px;\n\n      margin-left: 10px;\n\n      svg {\n        display: none;\n      }\n    }\n  }\n\n  @media (max-width: 500px) {\n    > div {\n      button {\n        svg {\n          display: block;\n        }\n\n        span {\n          display: none;\n        }\n      }\n    }\n  }\n`;\n\nexport const UserInformationContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  width: 100%;\n  max-width: 900px;\n\n  margin-top: 15px;\n  margin-left: 10px;\n  margin-right: 10px;\n\n  background-color: #fff;\n  padding: 50px;\n  border-radius: 8px;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n\n  button {\n    width: 100%;\n    max-width: 600px;\n    align-self: center;\n\n    margin-top: 30px;\n  }\n\n  @media (max-width: 600px) {\n    padding: 20px;\n  }\n`;\n\nexport const PersonalInformationContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n\n  img {\n    height: 180px;\n    border-radius: 90px;\n\n    border: 6px solid #bbb;\n  }\n\n  > div {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n\n    margin-left: 60px;\n\n    strong {\n      display: flex;\n      flex-direction: row;\n      align-items: center;\n      color: #333;\n\n      > svg {\n        margin-right: 5px;\n      }\n    }\n\n    h3 {\n      margin-top: 10px;\n      font-size: 20px;\n      font-weight: 500;\n    }\n\n    p {\n      margin-top: 10px;\n      color: #555;\n      font-weight: 300;\n      font-style: italic;\n    }\n  }\n\n  @media (max-width: 600px) {\n    flex-direction: column;\n    align-items: center;\n\n    img {\n      height: 200px;\n      width: 200px;\n      border-radius: 100px;\n    }\n\n    > div {\n      margin-top: 20px;\n      margin-left: 0px;\n      align-items: center;\n    }\n  }\n`;\n\nexport const GithubInformationContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n\n  margin-top: 40px;\n\n  > div {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    span {\n      font-size: 26px;\n      font-weight: 700;\n      color: #333;\n    }\n\n    strong {\n      font-size: 40px;\n      color: #2764bf;\n      margin-top: 20px;\n    }\n  }\n\n  @media (max-width: 500px) {\n    > div {\n      span {\n        font-size: 18px;\n      }\n\n      strong {\n        margin-top: 10px;\n        font-size: 26px;\n      }\n    }\n  }\n`;\n","import React, { useState, useCallback, useEffect } from 'react';\nimport { FiGithub, FiSearch } from 'react-icons/fi';\nimport { useHistory } from 'react-router-dom';\nimport { useSelector, DefaultRootState, useDispatch } from 'react-redux';\n\nimport api from '../../services/api';\n\nimport Header from '../../components/Header';\nimport Button from '../../components/Button';\nimport Input from '../../components/Input';\n\nimport { searchUser } from '../../store/modules/auth/actions';\n\nimport {\n  Container,\n  SearchUserContainer,\n  UserInformationContainer,\n  PersonalInformationContainer,\n  GithubInformationContainer,\n} from './styles';\n\nexport interface UserProps {\n  id: number;\n  avatar_url: string;\n  login: string;\n  name: string;\n  bio: string;\n  public_repos: number;\n  followers: number;\n  following: number;\n}\n\ninterface ReduxStateProps extends DefaultRootState {\n  login?: string;\n  password?: string;\n  searchUser?: string;\n}\n\nconst Dashboard: React.FC = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const data: ReduxStateProps = useSelector(state => state);\n\n  const [userInput, setUserInput] = useState('');\n  const [userData, setUserData] = useState<UserProps>();\n\n  const [inputError, setInputError] = useState(false);\n\n  const handleSearchButton = useCallback(() => {\n    if (userInput === '') {\n      setInputError(true);\n    } else {\n      dispatch(searchUser(userInput));\n    }\n  }, [userInput, dispatch]);\n\n  useEffect(() => {\n    async function loadUserData(): Promise<void> {\n      if (data.searchUser) {\n        const response = await api.get(data.searchUser);\n\n        setUserData(response.data);\n      }\n    }\n\n    loadUserData();\n  }, [data.searchUser]);\n\n  return (\n    <Container>\n      <Header />\n      <SearchUserContainer>\n        <span>Entre com o nome de um usuário cadastrado no Github</span>\n        <div>\n          <Input\n            isErrored={inputError}\n            placeholder=\"Busca de um usuário\"\n            defaultValue={userInput}\n            onChange={item => setUserInput(item.target.value)}\n          />\n          <Button type=\"button\" onClick={handleSearchButton}>\n            <FiSearch size={18} />\n            <span>Buscar</span>\n          </Button>\n        </div>\n      </SearchUserContainer>\n\n      {userData && (\n        <UserInformationContainer>\n          <PersonalInformationContainer>\n            <img src={userData.avatar_url} alt={userData.login} />\n\n            <div>\n              <strong>\n                <FiGithub size={14} />\n                <span>{userData.login}</span>\n              </strong>\n\n              <h3>{userData.name}</h3>\n\n              <p>{userData.bio}</p>\n            </div>\n          </PersonalInformationContainer>\n\n          <GithubInformationContainer>\n            <div>\n              <span>Repositórios</span>\n              <strong>{userData.public_repos}</strong>\n            </div>\n\n            <div>\n              <span>Seguidores</span>\n              <strong>{userData.followers}</strong>\n            </div>\n\n            <div>\n              <span>Seguindo</span>\n              <strong>{userData.following}</strong>\n            </div>\n          </GithubInformationContainer>\n\n          <Button\n            type=\"button\"\n            onClick={() => history.push(`/repositories/${data.searchUser}`)}\n          >\n            Ver repositórios\n          </Button>\n        </UserInformationContainer>\n      )}\n    </Container>\n  );\n};\n\nexport default Dashboard;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  position: absolute;\n  top: 0;\n  height: 100vh;\n  width: 100vw;\n  z-index: 5;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  background-color: rgba(0, 0, 0, 0.5);\n\n  @media (max-width: 500px) {\n    padding: 0 20px;\n  }\n`;\n\nexport const Modal = styled.div`\n  background-color: #fff;\n  padding: 15px;\n  border-radius: 8px;\n\n  h3 {\n    font-size: 22px;\n    color: #2764bf;\n    margin-bottom: 10px;\n  }\n\n  span {\n    color: #888;\n    font-style: italic;\n  }\n\n  main {\n    display: flex;\n    flex-direction: row;\n    width: 100%;\n    justify-content: space-around;\n  }\n\n  a {\n    text-decoration: none;\n  }\n\n  div {\n    margin-top: 20px;\n    display: flex;\n    align-items: center;\n\n    strong {\n      margin-left: 5px;\n      font-size: 25px;\n      color: #2764bf;\n    }\n  }\n\n  button {\n    margin-top: 20px;\n  }\n`;\n","import React from 'react';\nimport { FiAlertCircle, FiStar } from 'react-icons/fi';\nimport { CgGitFork } from 'react-icons/cg';\n\nimport Button from '../Button';\n\nimport { Container, Modal } from './styles';\n\nexport interface RepositoryProps {\n  id: number;\n  name: string;\n  full_name: string;\n  description: string;\n  stargazers_count: number;\n  forks_count: number;\n  open_issues_count: number;\n}\n\ninterface RepositoryModalProps {\n  handleClickOutsideModal(): void;\n  repository: RepositoryProps;\n}\n\nconst RepositoryModal: React.FC<RepositoryModalProps> = ({\n  handleClickOutsideModal,\n  repository,\n}) => {\n  return (\n    <>\n      {repository && (\n        <Container onClick={handleClickOutsideModal}>\n          <Modal>\n            <h3>{repository.name}</h3>\n            <span>{repository.description}</span>\n\n            <main>\n              <div>\n                <FiStar size={25} />\n                <strong>{repository.stargazers_count}</strong>\n              </div>\n\n              <div>\n                <CgGitFork size={25} />\n                <strong>{repository.forks_count}</strong>\n              </div>\n\n              <div>\n                <FiAlertCircle size={25} />\n                <strong>{repository.open_issues_count}</strong>\n              </div>\n            </main>\n\n            <a href={`https://www.github.com/${repository.full_name}`}>\n              <Button type=\"button\">Ver reposiório</Button>\n            </a>\n          </Modal>\n        </Container>\n      )}\n    </>\n  );\n};\n\nexport default RepositoryModal;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  height: 100vh;\n  justify-content: flex-start;\n  align-items: center;\n  background-color: #e5e5e5;\n\n  @media (max-width: 900px) {\n    padding: 0 20px;\n  }\n`;\n\nexport const RepositoriesListContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  width: 100%;\n  max-width: 900px;\n\n  margin-top: 90px;\n  margin-left: 10px;\n  margin-right: 10px;\n\n  background-color: #fff;\n  padding: 30px;\n  border-radius: 8px;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n\n  > strong {\n    margin-top: 25px;\n    font-size: 26px;\n    font-weight: 900;\n    color: #2764bf;\n  }\n\n  @media (max-width: 600px) {\n    align-items: center;\n\n    padding: 20px;\n  }\n`;\n\nexport const PersonalInformationContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n\n  img {\n    height: 100px;\n    border-radius: 50px;\n\n    border: 4px solid #bbb;\n  }\n\n  > div {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n\n    margin-left: 30px;\n\n    strong {\n      display: flex;\n      flex-direction: row;\n      align-items: center;\n      color: #333;\n\n      > svg {\n        margin-right: 5px;\n      }\n    }\n\n    h3 {\n      margin-top: 10px;\n      font-size: 20px;\n      font-weight: 500;\n    }\n\n    p {\n      margin-top: 10px;\n      color: #555;\n      font-weight: 300;\n      font-style: italic;\n    }\n  }\n\n  @media (max-width: 600px) {\n    > div {\n      margin-top: 20px;\n      margin-left: 30px;\n      align-items: center;\n\n      p {\n        display: none;\n      }\n    }\n  }\n`;\n\nexport const RepositoriesView = styled.div`\n  width: 100%;\n  margin-top: 20px;\n\n  > button {\n    height: 60px;\n    border: none;\n    background-color: #d9e8fe;\n    border-radius: 8px;\n    width: 100%;\n\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    padding-left: 8px;\n\n    & + button {\n      margin-top: 15px;\n    }\n\n    strong {\n      color: #2764bf;\n      font-size: 18px;\n    }\n\n    span {\n      margin-top: 5px;\n\n      color: #427dd6;\n      font-style: italic;\n    }\n  }\n\n  @media (max-width: 600px) {\n    > button {\n      width: 100%;\n\n      span {\n        display: none;\n      }\n    }\n  }\n`;\n\nexport const PaginationContainer = styled.div`\n  margin-top: 25px;\n  align-self: center;\n\n  button {\n    border: none;\n    background-color: transparent;\n\n    font-weight: 500;\n    color: #777;\n  }\n\n  strong {\n    margin: 0 15px;\n  }\n`;\n","import React, { useState, useCallback, useEffect } from 'react';\nimport { useRouteMatch } from 'react-router-dom';\nimport { FiGithub } from 'react-icons/fi';\n\nimport api from '../../services/api';\n\nimport Header from '../../components/Header';\nimport RepositoryModal, {\n  RepositoryProps,\n} from '../../components/RepositoryModal';\n\nimport { UserProps } from '../Dashboard';\n\nimport {\n  Container,\n  RepositoriesListContainer,\n  PersonalInformationContainer,\n  RepositoriesView,\n  PaginationContainer,\n} from './styles';\n\ninterface Param {\n  user: string;\n}\n\ninterface MatchTypes {\n  params: Param;\n}\n\nconst Repositories: React.FC = () => {\n  const match: MatchTypes = useRouteMatch();\n\n  const [page, setPage] = useState(1);\n  const [numberOfPages, setNumberOfPages] = useState(5);\n  const [showRepositoryModal, setShowRepositoryModal] = useState(false);\n  const [user, setUser] = useState<UserProps>();\n  const [repository, setRepository] = useState<RepositoryProps>();\n  const [repositoriesList, setRepositoriesList] = useState<\n    Array<RepositoryProps>\n  >([]);\n\n  useEffect(() => {\n    async function loadRepositoriesData(): Promise<void> {\n      const { data: repositoriesData } = await api.get(\n        `${match.params.user}/repos?per_page=5&page=${page}`,\n      );\n      const { data: userData } = await api.get(`${match.params.user}`);\n\n      setRepositoriesList(repositoriesData);\n      setUser(userData);\n      setNumberOfPages(Math.ceil(userData.public_repos / 5));\n    }\n\n    loadRepositoriesData();\n  }, [page, match.params.user]);\n\n  const handleNextPage = useCallback(() => {\n    setPage(page + 1);\n  }, [page]);\n\n  const handlePreviousPage = useCallback(() => {\n    if (page >= 2) {\n      setPage(page - 1);\n    }\n  }, [page]);\n\n  const handleClickRepository = useCallback(data => {\n    setRepository(data);\n    setShowRepositoryModal(true);\n  }, []);\n\n  const handleClickOutsideModal = useCallback(() => {\n    setShowRepositoryModal(false);\n  }, []);\n\n  return (\n    <Container>\n      <Header />\n\n      {showRepositoryModal && repository && (\n        <RepositoryModal\n          handleClickOutsideModal={handleClickOutsideModal}\n          repository={repository}\n        />\n      )}\n\n      <RepositoriesListContainer>\n        {user && (\n          <PersonalInformationContainer>\n            <img src={user.avatar_url} alt={user.login} />\n\n            <div>\n              <strong>\n                <FiGithub size={14} />\n                <span>{user.login}</span>\n              </strong>\n\n              <h3>{user.name}</h3>\n\n              <p>{user.bio}</p>\n            </div>\n          </PersonalInformationContainer>\n        )}\n\n        <strong>Lista de repositórios</strong>\n\n        <RepositoriesView>\n          {repositoriesList &&\n            repositoriesList.map(item => (\n              <button\n                key={item.id}\n                type=\"button\"\n                onClick={() => handleClickRepository(item)}\n              >\n                <strong>{item.name}</strong>\n\n                <span>{item.description}</span>\n              </button>\n            ))}\n        </RepositoriesView>\n\n        <PaginationContainer>\n          {page >= 2 && (\n            <button type=\"button\" onClick={handlePreviousPage}>\n              anterior\n            </button>\n          )}\n\n          <strong>{page}</strong>\n\n          {page < numberOfPages && (\n            <button type=\"button\" onClick={handleNextPage}>\n              próxima\n            </button>\n          )}\n        </PaginationContainer>\n      </RepositoriesListContainer>\n    </Container>\n  );\n};\n\nexport default Repositories;\n","import React from 'react';\nimport { Switch } from 'react-router-dom';\n\nimport Route from './Route';\n\nimport SignIn from '../pages/SignIn';\nimport Dashboard from '../pages/Dashboard';\nimport Repositories from '../pages/Repositories';\n\nconst Routes: React.FC = () => (\n  <Switch>\n    <Route exact path=\"/\" component={SignIn} />\n    <Route path=\"/dashboard\" component={Dashboard} isPrivate />\n    <Route path=\"/repositories/:user\" component={Repositories} isPrivate />\n  </Switch>\n);\n\nexport default Routes;\n","import produce from 'immer';\n\nconst INITIAL_STATE = {\n  login: '',\n  password: '',\n  searchUser: '',\n}\n\nexport default function auth(state = INITIAL_STATE, action) {\n  return produce(state, draft => {\n    switch (action.type) {\n      case '@auth/SIGN_IN': {\n        draft.login = action.payload.login;\n        draft.password = action.payload.password;\n        break;\n      }\n      case '@auth/SIGN_OUT': {\n        draft.login = '';\n        draft.password = '';\n        draft.searchUser = '';\n        break;\n      }\n      case '@auth/SEARCH_USER': {\n        draft.searchUser = action.payload;\n        break;\n      }\n      default:\n    };\n  })\n}\n","import storage from 'redux-persist/lib/storage';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport { createStore } from 'redux';\n\nimport authReducer from './modules/auth/reducer';\n\nconst persistConfig = {\n  key: '@github-repositories',\n  storage,\n  blacklist: 'auth'\n};\n\nconst store = createStore(persistReducer(persistConfig, authReducer));\nconst persistor = persistStore(store);\n\nexport { store, persistor };\n","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { Provider } from 'react-redux';\n\nimport GlobalStyle from './styles/globalStyle';\n\nimport Routes from './routes';\n\nimport { store, persistor } from './store';\n\nconst App: React.FC = () => (\n  <Router basename=\"/Gihub-repositories\">\n    <Provider store={store}>\n      <PersistGate persistor={persistor}>\n        <Routes />\n      </PersistGate>\n    </Provider>\n\n    <GlobalStyle />\n  </Router>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}